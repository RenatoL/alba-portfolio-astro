---
export interface Props {                                                                                         
   title: string;                                                                                                 
   description: string;                                                                                           
   thumbnailUrl: string;                                                                                          
   videoUrl: string;                                                                                              
   videoProvider: 'youtube' | 'vimeo' | 'imdb';                                                                   
 } 

const { title, description, thumbnailUrl, videoUrl, videoProvider } = Astro.props;

// Extract video ID based on provider
const getVideoId = (url: string, provider: string) => {                                                          
   if (provider === 'youtube') {                                                                                  
     const regExp = /^.*(youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=|&v=)([^#&?]*).*/;                               
     const match = url.match(regExp);                                                                             
     return match && match[2].length === 11 ? match[2] : null;                                                    
   } else if (provider === 'vimeo') {                                                                             
     const regExp = /vimeo\.com\/([0-9]+)/;                                                                       
     const match = url.match(regExp);                                                                             
     return match ? match[1] : null;                                                                              
   } else if (provider === 'imdb') {                                                                              
     const regExp = /\/video\/([a-zA-Z0-9]+)/;                                                                    
     const match = url.match(regExp);                                                                             
     return match ? match[1] : null;                                                                              
   }                                                                                                              
   return null;                                                                                                   
 };

const videoId = getVideoId(videoUrl, videoProvider);
---

<div class="video-container">
  <div class="video-content">
    {videoProvider === 'youtube' && 
      <iframe 
        src={`https://www.youtube.com/embed/${videoId}`}
        title={title}
        frameborder="0" 
        allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
        allowfullscreen
      ></iframe>
    }
    {videoProvider === 'vimeo' && 
      <iframe 
        src={`https://player.vimeo.com/video/${videoId}`}
        title={title}
        frameborder="0" 
        allow="autoplay; fullscreen; picture-in-picture" 
        allowfullscreen
      ></iframe>
    }
    {videoProvider === 'imdb' && 
      <iframe 
        src={`https://www.imdb.com/video/imdb/${videoId}/imdb/embed`}
        title={title}
        frameborder="0" 
        allow="autoplay; fullscreen" 
        allowfullscreen
      ></iframe>
    }
  </div>
  <div class="video-info">
    <h3>{title}</h3>
    <p>{description}</p>
  </div>
</div>

<style>
  .video-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
    margin: 2rem 0;
  }

  .video-content {
    position: relative;
    width: 100%;
    aspect-ratio: 16/9;
  }

  .video-content iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 8px;
  }

  .video-info {
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .video-info h3 {
    font-family: var(--font-heading);
    font-size: 1.5rem;
    margin-bottom: 1rem;
  }

  .video-info p {
    font-family: var(--font-body);
    line-height: 1.6;
  }

  @media (max-width: 768px) {
    .video-container {
      grid-template-columns: 1fr;
    }
  }
</style>

